[tool.poetry]
name = "python-skeleton-template"
version = "0.1.0"
description = "This repo to initiate a skeleton for Python development project"
authors = ["Tran Xuan Tu <xtutran@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
loguru = "^0.7.0"
# Add more packages as your need

[tool.poetry.dev-dependencies]
pytest = "*"
pytest-mock = "*"
tox = "^3.19.0"
coverage = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-mock = "*"
tox = "^3.19.0"
coverage = "*"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.coverage.run]
include = ["*/tests/*"]
branch = true

[tool.coverage.report]
omit = ["*__init__.py", "*constants.py", "*config.py"]
show_missing = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
preview = true
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    #    "UP",  # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
    "W191", # indentation contains tabs
    "F403", # unable to detect undefined names
    "F405", # defined from star imports
    "F841", # un-used local variable
    "F541", # f-string without any placeholders
    "C408", # Unnecessary `dict` call (rewrite as a literal)
    "B904"
]

[tool.ruff.format]
preview = true

[tool.ruff.lint.isort]
known-third-party = ["pydantic", "pandas"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
